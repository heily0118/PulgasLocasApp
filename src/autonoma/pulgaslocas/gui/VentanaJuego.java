/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package autonoma.pulgaslocas.gui;

import autonoma.pulgaslocas.elements.CampoDeBatalla;
import autonoma.pulgaslocas.elements.GeneradorPulgas;
import autonoma.pulgaslocas.elements.GestorJuego;
import autonoma.pulgaslocas.elements.GraphicContainer;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 * 
 * @author Heily Yohana Rios Ayala <heilyy.riosa@gmail.com>
 * @since 20250430
 * @version 1.0.0
 * 
 */
public class VentanaJuego extends javax.swing.JDialog implements GraphicContainer {
    private GestorJuego gestor;
    private Clip clip;
    private CampoDeBatalla campoDeBatalla;
    private GeneradorPulgas generadorPulgas;
    private final Timer temporizador;
    /**
     * Creates new form VentanaJuego
     */
    public VentanaJuego(java.awt.Frame parent, boolean modal, GestorJuego gestor) {
        super(parent, modal);
        
        
        initComponents();
        this.setSize(900,900);
         setResizable(false);
        this.setLocationRelativeTo(null);
        
        this.gestor = gestor;
        
        try{ 
        this.setIconImage(new ImageIcon(getClass().getResource("/autonoma/PulgasLocas/images/JuegoIcono.png")).getImage());
        
        }catch(NullPointerException e){
            System.out.println("Imagen no encontrada");
            
        }
        
        campoDeBatalla = new CampoDeBatalla(900, 900, null);

        this.generadorPulgas = new GeneradorPulgas(campoDeBatalla, 5000, 10000);
        generadorPulgas.start();
        
        temporizador = new Timer(100, e -> repaint());  
        temporizador.start();  
        
        setDoubleBuffered(true);
        
        sonidoBatalla();
        
        
        // Agregar el listener para detener la m√∫sica cuando se cierre la ventana
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                detenerSonido();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_Q) {
        System.exit(0);
    }

        
        gestor.manejareventoTeclado(evt);

       
        repaint();
    }//GEN-LAST:event_formKeyPressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
        System.out.println("x" + evt.getX() + "y" + evt.getY());
        gestor.manejarClick(evt);
        repaint();
        

    }//GEN-LAST:event_formMouseClicked
 @Override
    public void refresh(Graphics g) {
     this.repaint();
    }

    @Override
    public Rectangle getBoundaries() {
        return this.getBounds();
    }

 
    @Override
    public void paint(Graphics g) {
        super.paint(g); 

        if (gestor != null) {
            gestor.dibujarElementos(g);
        }
    }
    
    private void setDoubleBuffered(boolean b) {
        
    }

        public void sonidoBatalla() {
        try {
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(
                    getClass().getResource("/autonoma/PulgasLocas/sounds/Batalla.wav"));
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.loop(Clip.LOOP_CONTINUOUSLY);
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
            e.printStackTrace();
        }
    }
    
       public void detenerSonido() {
        if (clip != null) {
            clip.stop();
            clip.close();
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
